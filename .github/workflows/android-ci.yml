name: Android CI Pipeline

on:
  push:
    branches: [ main, master, dev, dev-tools ]
  pull_request:
    branches: [ main, master, dev, dev-tools ]

env:
  CI: true
  ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          licenses: true

      - name: Install Android tools
        run: |
          yes | sdkmanager --update
          yes | sdkmanager --install 'build-tools;34.0.0' 'platform-tools' 'platforms;android-34' 'cmdline-tools;latest'
          yes | sdkmanager --install 'emulator' --channel=0
          yes | sdkmanager --install 'system-images;android-34;google_apis;x86_64' --channel=0

      - name: Create AVD
        run: |
          echo "no" | avdmanager create avd \
            --force \
            --name test \
            --package "system-images;android-34;google_apis;x86_64" \
            --abi "google_apis/x86_64" \
            --device "pixel_5"

      - name: Start emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd test -no-window -no-audio -no-snapshot -gpu swiftshader_indirect &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done; input keyevent 82'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build debug APK
        run: ./gradlew assembleDebug

      - name: Run unit tests
        run: ./gradlew test

      - name: Run lint checks
        run: ./gradlew lintDebug

      - name: Run instrumented tests
        run: ./gradlew connectedCheck

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            app/build/reports/
            build/reports/